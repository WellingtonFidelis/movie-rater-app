{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\welli\\\\Documents\\\\Projects\\\\movie-rater-app\\\\frontend\\\\movie-rater\\\\src\\\\components\\\\auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { apiMovieRater } from '../services/api-movie-rater'; //import { TokenContext } from '../index';\n\nimport { useCookies } from 'react-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Auth() {\n  _s();\n\n  const [userName, setUserName] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n  const [token, setToken] = useCookies(['mr-token']);\n  const [isLoginView, setIsLoginView] = useState(true);\n\n  const LoginClicked = () => {\n    apiMovieRater.loginUser({\n      username: userName,\n      password: userPassword\n    }).then(response => setToken('mr-token', response.token)).catch(error => console.log(error));\n  };\n\n  const registerClicked = () => {\n    apiMovieRater.registerUser({\n      username: userName,\n      password: userPassword\n    }).then(() => LoginClicked()).catch(error => console.log(error));\n  };\n\n  const isDisabled = title.length === 0 || description.length === 0;\n  useEffect(() => {\n    // console.log(token);\n    if (token['mr-token']) {\n      window.location.href = '/movies';\n    }\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: isLoginView ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputUserName\",\n        children: \"User name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        name: \"inputUserName\",\n        id: \"inputUserName\",\n        value: userName,\n        onChange: event => setUserName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputUserPassword\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        name: \"inputUserPassword\",\n        id: \"inputUserPassword\",\n        value: userPassword,\n        onChange: event => setUserPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), isLoginView ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: LoginClicked,\n        disabled: true,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: registerClicked,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), isLoginView ? /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => setIsLoginView(false),\n        children: \"You don't have an account? Register here!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => setIsLoginView(true),\n        children: \"You already have login? Login here!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Auth, \"RFVCUJjqwDNm+T093AzoNJLAfXs=\", false, function () {\n  return [useCookies];\n});\n\n_c = Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["C:/Users/welli/Documents/Projects/movie-rater-app/frontend/movie-rater/src/components/auth.js"],"names":["React","useState","useEffect","apiMovieRater","useCookies","Auth","userName","setUserName","userPassword","setUserPassword","token","setToken","isLoginView","setIsLoginView","LoginClicked","loginUser","username","password","then","response","catch","error","console","log","registerClicked","registerUser","isDisabled","title","length","description","window","location","href","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nimport { apiMovieRater } from '../services/api-movie-rater';\r\n//import { TokenContext } from '../index';\r\nimport { useCookies } from 'react-cookie';\r\n\r\nexport default function Auth() {\r\n\r\n  const [userName, setUserName] = useState('');\r\n  const [userPassword, setUserPassword] = useState('');\r\n  const [token, setToken] = useCookies(['mr-token']);\r\n  const [isLoginView, setIsLoginView] = useState(true);\r\n\r\n  const LoginClicked = () => {\r\n    apiMovieRater.loginUser({\r\n      username: userName,\r\n      password: userPassword,\r\n    })\r\n      .then(response => setToken('mr-token', response.token))\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  const registerClicked = () => {\r\n    apiMovieRater.registerUser({\r\n      username: userName,\r\n      password: userPassword,\r\n    })\r\n      .then(() => LoginClicked())\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  const isDisabled = title.length === 0 || description.length === 0;\r\n\r\n  useEffect(() => {\r\n    // console.log(token);\r\n    if (token['mr-token']) { window.location.href = '/movies'; }\r\n  }, [token])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        {\r\n          isLoginView ? (\r\n            <h1>Login</h1>\r\n          ) : (\r\n            <h1>Register</h1>\r\n          )\r\n        }\r\n      </header>\r\n      <fieldset className=\"login-container\">\r\n        <label htmlFor=\"inputUserName\">User name</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n          name=\"inputUserName\"\r\n          id=\"inputUserName\"\r\n          value={userName}\r\n          onChange={event => setUserName(event.target.value)}\r\n        />\r\n        <label htmlFor=\"inputUserPassword\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          name=\"inputUserPassword\"\r\n          id=\"inputUserPassword\"\r\n          value={userPassword}\r\n          onChange={event => setUserPassword(event.target.value)}\r\n        />\r\n        {\r\n          isLoginView ? (\r\n            <button onClick={LoginClicked} disabled>Login</button>\r\n          ) : (\r\n            <button onClick={registerClicked} >Register</button>\r\n          )\r\n        }\r\n        {\r\n          isLoginView ? (\r\n            <p onClick={() => setIsLoginView(false)}>You don't have an account? Register here!</p>\r\n          ) : (\r\n            <p onClick={() => setIsLoginView(true)}>You already have login? Login here!</p>\r\n          )\r\n        }\r\n      </fieldset>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}