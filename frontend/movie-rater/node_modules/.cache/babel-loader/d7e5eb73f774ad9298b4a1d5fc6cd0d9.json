{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\welli\\\\Documents\\\\Projects\\\\movie-rater-app\\\\frontend\\\\movie-rater\\\\src\\\\components\\\\movie-form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { apiMovieRater } from '../services/api-movie-rater';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MovieForm(props) {\n  _s();\n\n  let {\n    movie\n  } = props;\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [token] = useCookies(['mr-token']);\n\n  const updateClicked = () => {\n    apiMovieRater.updatedMovie(movie.id, {\n      title,\n      description\n    }, token['mr-token']).then(response => props.updatedMovie(response)).catch(error => console.log(error));\n  };\n\n  const createClicked = () => {\n    apiMovieRater.createMovie({\n      title,\n      description\n    }, token['mr-token']).then(response => props.movieCreated(response)).catch(error => console.log(error));\n  };\n\n  const isDisabled = title.length === 0 || description;\n  useEffect(() => {\n    setTitle(movie.title);\n    setDescription(movie.description);\n  }, [movie]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: movie ? /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputTitle\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        name: \"inputTitle\",\n        id: \"inputTitle\",\n        value: title,\n        onChange: event => setTitle(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputDescription\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        placeholder: \"Description\",\n        name: \"inputDescription\",\n        id: \"inputDescription\",\n        cols: \"50\",\n        rows: \"5\",\n        value: description,\n        onChange: event => setDescription(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), movie.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: updateClicked,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createClicked,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MovieForm, \"YHhpTDdZwspI0JxJ7Gl6ePDxcCU=\", false, function () {\n  return [useCookies];\n});\n\n_c = MovieForm;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieForm\");","map":{"version":3,"sources":["C:/Users/welli/Documents/Projects/movie-rater-app/frontend/movie-rater/src/components/movie-form.js"],"names":["React","useState","useEffect","useCookies","apiMovieRater","MovieForm","props","movie","title","setTitle","description","setDescription","token","updateClicked","updatedMovie","id","then","response","catch","error","console","log","createClicked","createMovie","movieCreated","isDisabled","length","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,aAAT,QAA8B,6BAA9B;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAEvC,MAAI;AAAEC,IAAAA;AAAF,MAAYD,KAAhB;AAEA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACW,KAAD,IAAUT,UAAU,CAAC,CAAC,UAAD,CAAD,CAA1B;;AAEA,QAAMU,aAAa,GAAG,MAAM;AAC1BT,IAAAA,aAAa,CAACU,YAAd,CAA2BP,KAAK,CAACQ,EAAjC,EAAqC;AAAEP,MAAAA,KAAF;AAASE,MAAAA;AAAT,KAArC,EAA6DE,KAAK,CAAC,UAAD,CAAlE,EACGI,IADH,CACQC,QAAQ,IAAIX,KAAK,CAACQ,YAAN,CAAmBG,QAAnB,CADpB,EAEGC,KAFH,CAESC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAFlB;AAGD,GAJD;;AAMA,QAAMG,aAAa,GAAG,MAAM;AAC1BlB,IAAAA,aAAa,CAACmB,WAAd,CAA0B;AAAEf,MAAAA,KAAF;AAASE,MAAAA;AAAT,KAA1B,EAAkDE,KAAK,CAAC,UAAD,CAAvD,EACGI,IADH,CACQC,QAAQ,IAAIX,KAAK,CAACkB,YAAN,CAAmBP,QAAnB,CADpB,EAEGC,KAFH,CAESC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAFlB;AAGD,GAJD;;AAMA,QAAMM,UAAU,GAAGjB,KAAK,CAACkB,MAAN,KAAiB,CAAjB,IAAsBhB,WAAzC;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ,CAACF,KAAK,CAACC,KAAP,CAAR;AACAG,IAAAA,cAAc,CAACJ,KAAK,CAACG,WAAP,CAAd;AACD,GAHQ,EAGN,CAACH,KAAD,CAHM,CAAT;AAKA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,cAEIA,KAAK,gBACH;AAAU,MAAA,SAAS,EAAC,gBAApB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,OAFd;AAGE,QAAA,IAAI,EAAC,YAHP;AAIE,QAAA,EAAE,EAAC,YAJL;AAKE,QAAA,KAAK,EAAEC,KALT;AAME,QAAA,QAAQ,EAAEmB,KAAK,IAAIlB,QAAQ,CAACkB,KAAK,CAACC,MAAN,CAAaC,KAAd;AAN7B;AAAA;AAAA;AAAA;AAAA,cAFF,eAUE;AAAO,QAAA,OAAO,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,aAFd;AAGE,QAAA,IAAI,EAAC,kBAHP;AAIE,QAAA,EAAE,EAAC,kBAJL;AAKE,QAAA,IAAI,EAAC,IALP;AAME,QAAA,IAAI,EAAC,GANP;AAOE,QAAA,KAAK,EAAEnB,WAPT;AAQE,QAAA,QAAQ,EAAEiB,KAAK,IAAIhB,cAAc,CAACgB,KAAK,CAACC,MAAN,CAAaC,KAAd;AARnC;AAAA;AAAA;AAAA;AAAA,cAXF,EAsBItB,KAAK,CAACQ,EAAN,gBACE;AAAQ,QAAA,OAAO,EAAEF,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,gBAGE;AAAQ,QAAA,OAAO,EAAES,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBN;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,GA8BD;AAhCR;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;GAhEuBjB,S;UAMNF,U;;;KANME,S;AAgEvB","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useCookies } from 'react-cookie';\r\nimport { apiMovieRater } from '../services/api-movie-rater';\r\n\r\nexport default function MovieForm(props) {\r\n\r\n  let { movie } = props;\r\n\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [token] = useCookies(['mr-token']);\r\n\r\n  const updateClicked = () => {\r\n    apiMovieRater.updatedMovie(movie.id, { title, description }, token['mr-token'])\r\n      .then(response => props.updatedMovie(response))\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  const createClicked = () => {\r\n    apiMovieRater.createMovie({ title, description }, token['mr-token'])\r\n      .then(response => props.movieCreated(response))\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  const isDisabled = title.length === 0 || description\r\n\r\n  useEffect(() => {\r\n    setTitle(movie.title);\r\n    setDescription(movie.description);\r\n  }, [movie])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {\r\n        movie ? (\r\n          <fieldset className=\"form-container\">\r\n            <label htmlFor=\"inputTitle\">Title</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Title\"\r\n              name=\"inputTitle\"\r\n              id=\"inputTitle\"\r\n              value={title}\r\n              onChange={event => setTitle(event.target.value)}\r\n            />\r\n            <label htmlFor=\"inputDescription\">Description</label>\r\n            <textarea\r\n              type=\"text\"\r\n              placeholder=\"Description\"\r\n              name=\"inputDescription\"\r\n              id=\"inputDescription\"\r\n              cols=\"50\"\r\n              rows=\"5\"\r\n              value={description}\r\n              onChange={event => setDescription(event.target.value)}\r\n            ></textarea>\r\n            {\r\n              movie.id ? (\r\n                <button onClick={updateClicked} >Update</button>\r\n              ) : (\r\n                <button onClick={createClicked} >Create</button>\r\n              )\r\n            }\r\n          </fieldset>\r\n        ) : null\r\n      }\r\n    </React.Fragment>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}